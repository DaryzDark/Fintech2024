name: CI Pipeline

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up JDK
        uses: actions/setup-java@v4.5.0
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}v2
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build
        working-directory: CustomKudaGoAPI

      - name: Run tests with coverage
        run: ./gradlew test jacocoTestReport
        working-directory: CustomKudaGoAPI

      - name: Run static analysis (e.g., Checkstyle)
        run: ./gradlew check
        working-directory: CustomKudaGoAPI

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:       
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          IMAGE_NAME: ghcr.io/daryzdark/fintech2024/customkudagoapi
          VERSION: ${{ github.sha }}
        run: |
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$VERSION -f CustomKudaGoAPI/Dockerfile CustomKudaGoAPI
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION
        with:
          volumes:
           - /var/run/docker.sock:/var/run/docker.sock
